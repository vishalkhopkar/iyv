# Generated by Django 3.0.7 on 2020-07-06 14:55

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('name', models.SlugField()),
                ('date_time', models.DateTimeField()),
                ('likesCnt', models.IntegerField()),
                ('commentsCnt', models.IntegerField()),
                ('references', models.TextField()),
            ],
            options={
                'ordering': ['-likesCnt'],
                'get_latest_by': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('word', models.CharField(max_length=50)),
                ('used_in_articles_cnt', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-used_in_articles_cnt'],
            },
        ),
        migrations.CreateModel(
            name='TagArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagarticle_article', to='blog.Article')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagarticle_tag', to='blog.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('profilePic', models.CharField(blank=True, default=None, max_length=30, null=True)),
                ('isBanned', models.BooleanField(default=False)),
                ('banDaysLeft', models.IntegerField(default=0)),
                ('followerCnt', models.IntegerField(default=0)),
                ('followingCnt', models.IntegerField(default=0)),
                ('date_joined', models.DateField(default=datetime.datetime(2020, 7, 6, 14, 55, 57, 460531, tzinfo=utc))),
                ('followers', models.ManyToManyField(through='blog.Follower', to='blog.MyUser')),
            ],
            options={
                'ordering': ['-followerCnt', '-followingCnt', '-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_article', to='blog.Article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_user', to='blog.MyUser')),
            ],
        ),
        migrations.AddField(
            model_name='follower',
            name='from_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_user', to='blog.MyUser'),
        ),
        migrations.AddField(
            model_name='follower',
            name='to_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to='blog.MyUser'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.CharField(max_length=500)),
                ('date_time', models.DateTimeField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_article', to='blog.Article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_user', to='blog.MyUser')),
            ],
            options={
                'ordering': ['date_time'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to='blog.MyUser'),
        ),
        migrations.AddField(
            model_name='article',
            name='comments',
            field=models.ManyToManyField(related_name='article_comments', through='blog.Comment', to='blog.MyUser'),
        ),
        migrations.AddField(
            model_name='article',
            name='likes',
            field=models.ManyToManyField(related_name='article_likes', through='blog.Like', to='blog.MyUser'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(related_name='article_tags', through='blog.TagArticle', to='blog.Tag'),
        ),
        migrations.AlterUniqueTogether(
            name='follower',
            unique_together={('from_user', 'to_user')},
        ),
    ]
